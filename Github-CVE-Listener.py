#coding = ctf-8

import urllib
import requests,re,time
import json
import os
from base64 import b64encode
from nacl import encoding, public

gh_token=os.getenv('GH_TOKEN')
gh_repo=os.getenv('GH_REPO')
Auth=r'token '+gh_token
geturl=r'https://api.github.com/repos/'+gh_repo+r'/actions/secrets/public-key'

def getpublickey(Auth,geturl):
    headers={'Accept': 'application/vnd.github.v3+json','Authorization': Auth}
    html = requests.get(geturl,headers=headers)
    jsontxt = json.loads(html.text)
    if 'key' in jsontxt:
        print("Get public key suceeded")
    else:
        print("Get public key failed :( Is secret GH_TOKEN set correctly? ")
    public_key = jsontxt['key']
    global key_id 
    key_id = jsontxt['key_id']
    return public_key

#encrypt secret
def createsecret(public_key,secret_value):
    public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
    sealed_box = public.SealedBox(public_key)
    encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
    return b64encode(encrypted).decode("utf-8")

#upload total_count as secret
def setsecret(encrypted_value,key_id,puturl):
    headers={'Accept': 'application/vnd.github.v3+json','Authorization': Auth}
    data_str=r'{"encrypted_value":"'+encrypted_value+r'",'+r'"key_id":"'+key_id+r'"}'
    putstatus=requests.put(puturl,headers=headers,data=data_str)
    if putstatus.status_code >= 300:
        print("total_count upload failed!")
    else:
        print("total_count upload suceeded!")
    return putstatus
#
def getNews():
    try:
        api = "https://api.github.com/search/repositories?q=CVE-2021&sort=updated"
        req = requests.get(api).text
        cve_total_count=re.findall ('"total_count":*.{1,10}"incomplete_results"',req)[0][14:17]
        cve_description=re.findall ('"description":*.{1,200}"fork"',req)[0].replace("\",\"fork\"",'').replace("\"description\":\"",'')
        cve_url=re.findall ('"svn_url":*.{1,200}"homepage"',req)[0].replace("\",\"homepage\"",'').replace("\"svn_url\":\"",'')

        return cve_total_count,cve_description,cve_url

    except Exception as e:
        print (e,"can not connect to github :( ")

#Send Message
def sendNews(total_count):
    try:
        api = "https://api.github.com/search/repositories?q=CVE-2021&sort=updated"
        req = requests.get(api).text
        #The contents of the message
        msg = str(getNews())
        #The title of the message
        text = r'Senpai! New CVE updates arrived! .qwq.'
        sckey = os.environ["SCKEY"]
        uri = 'https://sc.ftqq.com/'+ sckey +'.send?text={}&desp={}'.format(text, msg)
        if total_count!=getNews()[0]:
             print("CVE updates found! Sending Wechat!")
             send = requests.get(uri)
             total_count = getNews()[0]
             return total_count
        else:
             print("No CVE updates found! Bye!")
             exit()


    except Exception as e:
        raise e


if __name__ == '__main__':
    total_count = os.getenv('total_count')
    puturl=r'https://api.github.com/repos/'+gh_repo+r'/actions/secrets/TOTAL_COUNT'
    key_id='qwq'
    encrypted_value=createsecret(getpublickey(Auth,geturl),sendNews(total_count))
    setsecret(encrypted_value,key_id,puturl)
    #sendNews()
